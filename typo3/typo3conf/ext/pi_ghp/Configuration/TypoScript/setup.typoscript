# Allgemeine Konfiguration
config {
  # Neuer Parameter L wird in URL eingebaut
  linkVars = L
  # darf nur einmal in der URL vorkommen
  uniqueLinkVars = 1
  # Defaultwert ist 0
  sys_language_uid = 0
  # Auswahl Sprache
  language = de
  # Uhrzeit wird auf Sprache eingestellt
  locale_all = de_DE
  # Suchindizierung aktivieren
  index_enable = 1
  # Indizierung auf externe Medien erweitern
  index_externals = 1
}

# Default PAGE object:
page = PAGE

page {

  # Meta Tags
  page.config.doctype = html5
  meta.author = Michael Stoelting
  meta.description = Dies ist die Webseite des Guitar Hearts Project
  meta.viewport = width=device-width, initial-scale=1

  # Einbindung CSS
  includeCSS {
    bootstrap = EXT:pi_ghp/Resources/Public/vendors/bootstrap/dist/css/bootstrap.css
    //bootstrap = fileadmin/vendors/bootstrap/css/bootstrap.css
    fontawesome = EXT:pi_ghp/Resources/Public/vendors/fortawesome/css/all.min.css
    main = EXT:pi_ghp/Resources/Public/css/style.css
  }

  # Einbindung JS
  includeJS {
    jquery = EXT:pi_ghp/Resources/Public/vendors/jquery/dist/jquery.min.js
    main = EXT:pi_ghp/Resources/Public/js/custom.js
    bootstrapJS = EXT:pi_ghp/Resources/Public/vendors/bootstrap/dist/js/bootstrap.bundle.js
    //bootstrapJS = fileadmin/vendors/bootstrap/js/bootstrap.js
    fontawesomeJS = EXT:pi_ghp/Resources/Public/vendors/fortawesome/js/all.min.js
  }

  # Header Hintergrundbild dynamische hinterlegung
  headerData {
    10 = IMAGE
    10 {
      file {
        import = 1
        import {

          # Import der Daten aus der Templatedatei
          data = levelmedia:-1,slide

          # Auswahl erstes Angezeigtes Bild
          listNum = 0
        }
        treatIdAsReference = 1
        width = 1920
      }

      # Einbindung der CSS-Klasse mit dem Hintergrundbild in den Header
      layoutKey = cssbg
      layout {
        cssbg {
          # SRC ist das Attribut src des img tags welches vorher eingebunden wurde
          element = <style type="text/css">.header-bg-image { background-image: url(###SRC###); }</style>
        }
      }
    }
  }

  # Inititalisierung des Fluid-Templates
  10 = FLUIDTEMPLATE
  10 {

    # Template-Datei wird eingebunden
    file = EXT:pi_ghp/Resources/Private/Templates/main_template.html
    partialRootPaths {
      10 = EXT:pi_ghp/Resources/Private/Partials/
    }
    templateRootPaths {
      10 = EXT:pi_ghp/Resources/Private/Templates/
    }

    dataProcessing {
      10 = TYPO3\CMS\Frontend\DataProcessing\MenuProcessor
      10 {
        special = directory
        special.value = 22
        as = sidebars
      }
    }

    # Variablen aus der Templatedatei werden gesetzt
    variables {

      sidebarcontent = CONTENT
      sidebarcontent {
        table = tt_content

        select.pidInList = 24

        renderObj = TEXT
        renderObj.field = bodytext
      }

      # Einbindung fixes Logo
      logo = IMAGE
      logo.file = fileadmin/images/images/BilderLars/1548x1026.png

      logoScroll = IMAGE
      logoScroll.file = fileadmin/images/images/BilderLars/ghp_text_white.png
      logoScroll.file.width = 200px;

      /*
      contentTrailer = TEXT
      contentTrailer.wrap = <h1> | </h1>
      contentTrailer.value = Mit jeder Gitarre ein Lächeln
      */
      # Holen der Überschirft auf dem Trailer
      contentTrailer = CONTENT
      contentTrailer {
        table = tt_content
        select.orderBy = sorting
        select.where = colPos=5
      }

      # Einbindung fixer Footer
      footerLabel = TEXT
      footerLabel.value = The Guitar Hearts Project e.V. <br>guitarheartsproject@outlook.de <br>067719344061 <br>Langgasse 17, 56348 Bornich, Germany <br><br>©2020 The Guitar Hearts Project e.V.

      # Einbindung Navbar
      menuPrimary = HMENU
      menuPrimary {

        # Ordner Struktur als Vorgabe (alle Unterseiten von ID=2 werden als Menü dargestellt)
        special = directory
        special.value = 2

        # ul-tag kommt um das Menü herum
        wrap = <ul class="navbar-nav mt-2 mt-lg-0">|</ul>

        # Darstellung des Menüs
        1 = TMENU
        1 {

          #Untermenü-Ebene wird immer angezeigt
          expAll = 1

          # NO(rmale) Darstellung
          NO = 1
          NO {
            # umschließung des Menü-Eintrags mit einem li-tag
            wrapItemAndSub = <li class="nav-item nav-link">|</li>
          }

          # ACT(ive) hat gleiche Eigenschaften wie NO
          ACT < .NO
          ACT {
            wrapItemAndSub = <li class="nav-item nav-link active">|</li>
          }
          /*
          IFSUB < .NO
          IFSUB {
          wrapItemAndSub = <li class="nav-item nav-link dropdown">|</li>
          linkWrap = | <span class="caret"></span>
          ATagParams = class="dropdown-toggle" role="button" data-toggle="dropdown"
          ATagBeforeWrap = 1
          }

          ACTIFSUB < .IFSUB
          ACTIFSUB {
          wrapItemAndSub = <li class="nav-item nav-link dropdown active">|</li>
          }
          */
        }

        # Einbindung Untermenü
        2 < .1
        2 {
          wrap = <ul class="dropdown-menu">|</ul>
        }
      }

      # Einbindung des Contents in der Hauptspalte
      //contentMain < styles.content.get
      # Alternative:
      # Inhalte werden aus tt_content Tabelle gezogen
      contentMain = CONTENT
      contentMain {
        table = tt_content
        # Datensätze werden in Backend-Reihenfolge ausgelesen
        select.orderBy = sorting
        # Spalte "Normal"
        select.where = colPos=0
        select.languageField = sys_language_uid
      }

      # Einbindung der Sidebars
      bewerben = COA
      bewerben {
        10 < styles.content.get
        10.select.where = colPos = 0
        10.select.pidInList = 24

        20 = TEXT
        20.data = DB:pages:24:title
      }

      spenden = COA
      spenden {
        10 < styles.content.get
        10.select.where = colPos = 0
        10.select.pidInList = 23
      }

      # Einbindung des Contents in der rechten Spalte
      contentMargin = COA
      contentMargin {
        10 < styles.content.get
        10.select.orderBy = sorting
        # colPos=2 ist der Bezeichner in der Tabelle für die Randspalte (angegeben im List-Backend)
        10.select.where = colPos=2

        20 < styles.content.get
        20.select.where = colPos=2
        20.select.pidInList = 14
      }

      # Einbindung Footer-Menü
      footerSecondaryMenu = HMENU
      footerSecondaryMenu {
        special = directory
        special.value = 4
        wrap = <ul>|</ul>

        1 = TMENU
        1 {
          NO = 1
          NO {
            linkWrap = <li>|</li>
          }
        }
      }
      /*
      # Footer-Partners Einbindung - Bsp aktuell News-Einbindung
      footerPartners < tt_content.list.20.news_pi1
      footerPartners {
      # Einbindung exta Template für diesen footer
      view.templateRootPaths.0 = fileadmin/templates/ext/news-footer/
      } */

      # Das News-Plugin im Fußbereich einfügen
      footerPartners < tt_content.list.20.news_pi1
      footerPartners {
        view.templateRootPaths.0 = EXT:pi_ghp/Resources/Private/Templates/Extentions/News-footer/
        view.partialRootPaths.0 = EXT:pi_ghp/Resources/Private/Partials/News-footer/
        view.layoutRootPaths.0 = EXT:pi_ghp/Resources/Private/Layouts/News-footer/

        settings {
          defaultDetailPid = 21
          limit = 3
        }
      }

      # Breadcrumb Leiste erstellen
      # Das COA-Objekt bietet die Möglichkeit mehrere Objekte innerhalb des Objektes zu realisieren (Hier Text und HMENU)
      menuBreadcrumb = COA
      menuBreadcrumb {

        # Text vor Breadcump setzen
        10 = TEXT
        10 {
          value = Sie sind hier:
          wrap = <span class="youarehere"> | </span>
        }

        20 = HMENU
        20 {
          # Überschriften der einzelen Seiten bzw. Unterseiten werden gezogen
          special = rootline

          # Startpunkt des Pfades definieren - ab 2 (0 = root, 1 = Hauptnavigation) - -1 (bis zum Ende)
          special.range = 2|-1

          # Styling des Menüs
          1 = TMENU
          1 {
            wrap = <ol class="breadcrumb-menu">|</ol>
            NO = 1
            NO {
              linkWrap = <li class="breadcrumb-item">|</li>
            }
          }

          # Styling aktueller Seite (ACT = aktuelle Seite + übergeordnete Seiten / CUR = nur aktuelle Seite)
          CUR = 1
          CUR {
            linkWrap = <li class="activeBread">|</li>

            # Letzte Seite wird nicht verlinkt
            doNotLinkIt = 1
          }
        }
      }

      language = TEXT
      language {
        value = English
        # Neuer Link mit Verweis auf aktuelle Seite + zusätzlichen Parameter L=1
        typolink {
          ATagBeforeWrap = 1
          wrap = <i class="glyphicon glyphicon-globe"></i>&nbsp;|
          parameter.data = page:uid
          additionalParams = &L=1
        }
      }
    }
  }
}

# Erweiterung des contentElement um einen weiteren rootpath
lib.contentElement {
  partialRootPaths {
    10 = EXT:pi_ghp/Resources/Private/Partials/
  }
  templateRootPaths {
    10 = EXT:pi_ghp/Resources/Private/Templates/
  }
}

lib.sidebarcontent = CONTENT
lib.sidebarcontent {
  table = tt_content
  select.pidInList = {field:uid}
  select.pidInList.insertData = 1

  renderObj = TEXT
  renderObj.field = bodytext
}

plugin.tx_form.settings {
  yamlConfigurations {
    100 = EXT:pi_ghp/Configuration/Yaml/forms.yaml
  }
}

module.tx_forms.settings {
  yamlConfigurations {
    100 = EXT:pi_ghp/Configuration/Yaml/Forms-Backend.yaml
  }
}

# Mehrsprachigkeit
# Wenn GB(GetPost-Parameter) L den Wert 1 hat
[globalVar = GP:L=1]
  config {
    sys_language_uid = 1
    language = en
    locale_all = en_UK
  }
  # Deutsch wird als Übersetzung angeboten
  page.10.variables.language {
    value = Deutsch
    typolink.additionalParams = &L=0
  }
[global]


# Mehrsprachigkeit
# Wenn GB(GetPost-Parameter) L den Wert 1 hat
[globalVar = GP:L=1]
  config {
    sys_language_uid = 1
    language = en
    locale_all = en_UK
  }
  # Deutsch wird als Übersetzung angeboten
  page.10.variables.language {
    value = Deutsch
    typolink.additionalParams = &L=0
  }
[global]

# Laden des eigenen Templates für die Login-Seite
plugin.tx_felogin_pi1 {
  templateFile = EXT:pi_ghp/Resources/Private/Templates/Extentions/Felogin/FrontendLogin.html
}

# Speichern des Loginforms in einer Fluid Variable
/*page.10.variables.login < plugin.tx_felogin_pi1
page.10.variables.login {
# Lagerort der Benutzer (PageId 16)
storagePid = 16
templateFile = fileadmin/templates/ext/felogin/FrontendLoginCompact.html
}
*/

plugin.tx_ownblog_pi.persistence.storagePid = 5

plugin.tx_pighp_pi {
    view {
        templateRootPaths.0 = EXT:pi_ghp/Resources/Private/Templates/
        templateRootPaths.1 = {$plugin.tx_pighp_pi.view.templateRootPath}
        partialRootPaths.0 = EXT:pi_ghp/Resources/Private/Partials/
        partialRootPaths.1 = {$plugin.tx_pighp_pi.view.partialRootPath}
        layoutRootPaths.0 = EXT:pi_ghp/Resources/Private/Layouts/
        layoutRootPaths.1 = {$plugin.tx_pighp_pi.view.layoutRootPath}
    }
    persistence {
        storagePid = {$plugin.tx_pighp_pi.persistence.storagePid}
        #recursive = 1
    }
    features {
        #skipDefaultArguments = 1
        # if set to 1, the enable fields are ignored in BE context
        ignoreAllEnableFieldsInBe = 0
        # Should be on by default, but can be disabled if all action in the plugin are uncached
        requireCHashArgumentForActionArguments = 1
    }
    mvc {
        #callDefaultActionIfActionCantBeResolved = 1
    }
}

tt_content {
  contentelement_ghp =< lib.contentElement
  contentelement_ghp {
    templateName = NewContentElement_GHP
  }
  sideHeaderContent =< lib.contentElement
  sideHeaderContent {
    templateName = SideHeaderContent
  }
}

# these classes are only used in auto-generated templates
plugin.tx_pighp._CSS_DEFAULT_STYLE (
    textarea.f3-form-error {
        background-color:#FF9F9F;
        border: 1px #FF0000 solid;
    }

    input.f3-form-error {
        background-color:#FF9F9F;
        border: 1px #FF0000 solid;
    }

    .tx-pi-ghp table {
        border-collapse:separate;
        border-spacing:10px;
    }

    .tx-pi-ghp table th {
        font-weight:bold;
    }

    .tx-pi-ghp table td {
        vertical-align:top;
    }

    .typo3-messages .message-error {
        color:red;
    }

    .typo3-messages .message-ok {
        color:green;
    }
)
