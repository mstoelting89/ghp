<?php

class Standard_action_index_38d44eaced76abdb697b524df723dfc8b2c286bb extends \TYPO3Fluid\Fluid\Core\Compiler\AbstractCompiledTemplate {

public function getLayoutName(\TYPO3Fluid\Fluid\Core\Rendering\RenderingContextInterface $renderingContext) {
$self = $this;
return (string) '';
}
public function hasLayout() {
return FALSE;
}
public function addCompiledNamespaces(\TYPO3Fluid\Fluid\Core\Rendering\RenderingContextInterface $renderingContext) {
$renderingContext->getViewHelperResolver()->addNamespaces(array (
  'core' => 
  array (
    0 => 'TYPO3\\CMS\\Core\\ViewHelpers',
  ),
  'f' => 
  array (
    0 => 'TYPO3Fluid\\Fluid\\ViewHelpers',
    1 => 'TYPO3\\CMS\\Fluid\\ViewHelpers',
  ),
  'formvh' => 
  array (
    0 => 'TYPO3\\CMS\\Form\\ViewHelpers',
  ),
  'k' => 
  array (
    0 => 'EBT\\ExtensionBuilder\\ViewHelpers',
  ),
));
}

/**
 * Main Render function
 */
public function render(\TYPO3Fluid\Fluid\Core\Rendering\RenderingContextInterface $renderingContext) {
$self = $this;
$output0 = '';

$output0 .= '<?php

/***************************************************************
 * Extension Manager/Repository config file for ext: "';
$array1 = array (
);
$output0 .= $renderingContext->getVariableProvider()->getByPath('extension.extensionKey', $array1);

$output0 .= '"
 *
 * Auto generated by Extension Builder ';
// Rendering ViewHelper TYPO3\CMS\Fluid\ViewHelpers\Format\DateViewHelper
$renderChildrenClosure3 = function() use ($renderingContext, $self) {
return 'now';
};
$arguments2 = array();
$arguments2['date'] = NULL;
$arguments2['format'] = '';
$arguments2['base'] = NULL;
$arguments2['format'] = 'Y-m-d';
$renderChildrenClosure3 = ($arguments2['date'] !== null) ? function() use ($arguments2) { return $arguments2['date']; } : $renderChildrenClosure3;
$output0 .= TYPO3\CMS\Fluid\ViewHelpers\Format\DateViewHelper::renderStatic($arguments2, $renderChildrenClosure3, $renderingContext);

$output0 .= '
 *
 * Manual updates:
 * Only the data in the array - anything else is removed by next write.
 * "version" and "dependencies" must not be touched!
 ***************************************************************/

$EM_CONF[$_EXTKEY] = [
    \'title\' => \'';
// Rendering ViewHelper EBT\ExtensionBuilder\ViewHelpers\Format\QuoteStringViewHelper
$renderChildrenClosure5 = function() use ($renderingContext, $self) {
$array6 = array (
);return $renderingContext->getVariableProvider()->getByPath('extension.name', $array6);
};
$arguments4 = array();
$arguments4['value'] = NULL;

$output0 .= EBT\ExtensionBuilder\ViewHelpers\Format\QuoteStringViewHelper::renderStatic($arguments4, $renderChildrenClosure5, $renderingContext);

$output0 .= '\',
    \'description\' => \'';
// Rendering ViewHelper EBT\ExtensionBuilder\ViewHelpers\Format\QuoteStringViewHelper
$renderChildrenClosure8 = function() use ($renderingContext, $self) {
$array9 = array (
);return $renderingContext->getVariableProvider()->getByPath('extension.description', $array9);
};
$arguments7 = array();
$arguments7['value'] = NULL;

$output0 .= EBT\ExtensionBuilder\ViewHelpers\Format\QuoteStringViewHelper::renderStatic($arguments7, $renderChildrenClosure8, $renderingContext);

$output0 .= '\',
    \'category\' => \'';
$array10 = array (
);
$output0 .= $renderingContext->getVariableProvider()->getByPath('extension.category', $array10);

$output0 .= '\',
    \'author\' => \'';
// Rendering ViewHelper TYPO3Fluid\Fluid\ViewHelpers\ForViewHelper
$renderChildrenClosure12 = function() use ($renderingContext, $self) {
$output14 = '';
// Rendering ViewHelper TYPO3Fluid\Fluid\ViewHelpers\IfViewHelper
$renderChildrenClosure16 = function() use ($renderingContext, $self) {
return ', ';
};
$arguments15 = array();
$arguments15['then'] = NULL;
$arguments15['else'] = NULL;
$arguments15['condition'] = false;
// Rendering Boolean node
// Rendering Array
$array17 = array();
$array18 = array (
);$array17['0'] = $renderingContext->getVariableProvider()->getByPath('counter.index', $array18);
$array17['1'] = ' > 0';

$expression19 = function($context) {return (TYPO3Fluid\Fluid\Core\Parser\BooleanParser::convertNodeToBoolean($context["node0"]) > 0);};
$arguments15['condition'] = TYPO3Fluid\Fluid\Core\Parser\SyntaxTree\BooleanNode::convertToBoolean(
					$expression19(
						TYPO3Fluid\Fluid\Core\Parser\SyntaxTree\BooleanNode::gatherContext($renderingContext, $array17)
					),
					$renderingContext
				);
$arguments15['__thenClosure'] = $renderChildrenClosure16;

$output14 .= TYPO3Fluid\Fluid\ViewHelpers\IfViewHelper::renderStatic($arguments15, $renderChildrenClosure16, $renderingContext);
$array20 = array (
);
$output14 .= $renderingContext->getVariableProvider()->getByPath('person.name', $array20);
return $output14;
};
$arguments11 = array();
$arguments11['each'] = NULL;
$arguments11['as'] = NULL;
$arguments11['key'] = NULL;
$arguments11['reverse'] = false;
$arguments11['iteration'] = NULL;
$array13 = array (
);$arguments11['each'] = $renderingContext->getVariableProvider()->getByPath('extension.persons', $array13);
$arguments11['as'] = 'person';
$arguments11['iteration'] = 'counter';

$output0 .= TYPO3Fluid\Fluid\ViewHelpers\ForViewHelper::renderStatic($arguments11, $renderChildrenClosure12, $renderingContext);

$output0 .= '\',
    \'author_email\' => \'';
// Rendering ViewHelper TYPO3Fluid\Fluid\ViewHelpers\ForViewHelper
$renderChildrenClosure22 = function() use ($renderingContext, $self) {
// Rendering ViewHelper TYPO3Fluid\Fluid\ViewHelpers\IfViewHelper
$renderChildrenClosure25 = function() use ($renderingContext, $self) {
$output29 = '';
// Rendering ViewHelper TYPO3Fluid\Fluid\ViewHelpers\IfViewHelper
$renderChildrenClosure31 = function() use ($renderingContext, $self) {
return ', ';
};
$arguments30 = array();
$arguments30['then'] = NULL;
$arguments30['else'] = NULL;
$arguments30['condition'] = false;
// Rendering Boolean node
// Rendering Array
$array32 = array();
$array33 = array (
);$array32['0'] = $renderingContext->getVariableProvider()->getByPath('counter.index', $array33);
$array32['1'] = ' > 0';

$expression34 = function($context) {return (TYPO3Fluid\Fluid\Core\Parser\BooleanParser::convertNodeToBoolean($context["node0"]) > 0);};
$arguments30['condition'] = TYPO3Fluid\Fluid\Core\Parser\SyntaxTree\BooleanNode::convertToBoolean(
					$expression34(
						TYPO3Fluid\Fluid\Core\Parser\SyntaxTree\BooleanNode::gatherContext($renderingContext, $array32)
					),
					$renderingContext
				);
$arguments30['__thenClosure'] = $renderChildrenClosure31;

$output29 .= TYPO3Fluid\Fluid\ViewHelpers\IfViewHelper::renderStatic($arguments30, $renderChildrenClosure31, $renderingContext);
$array35 = array (
);
$output29 .= $renderingContext->getVariableProvider()->getByPath('person.email', $array35);
return $output29;
};
$arguments24 = array();
$arguments24['then'] = NULL;
$arguments24['else'] = NULL;
$arguments24['condition'] = false;
// Rendering Boolean node
// Rendering Array
$array26 = array();
$array27 = array (
);$array26['0'] = $renderingContext->getVariableProvider()->getByPath('person.email', $array27);

$expression28 = function($context) {return TYPO3Fluid\Fluid\Core\Parser\BooleanParser::convertNodeToBoolean($context["node0"]);};
$arguments24['condition'] = TYPO3Fluid\Fluid\Core\Parser\SyntaxTree\BooleanNode::convertToBoolean(
					$expression28(
						TYPO3Fluid\Fluid\Core\Parser\SyntaxTree\BooleanNode::gatherContext($renderingContext, $array26)
					),
					$renderingContext
				);
$arguments24['__thenClosure'] = $renderChildrenClosure25;
return TYPO3Fluid\Fluid\ViewHelpers\IfViewHelper::renderStatic($arguments24, $renderChildrenClosure25, $renderingContext);
};
$arguments21 = array();
$arguments21['each'] = NULL;
$arguments21['as'] = NULL;
$arguments21['key'] = NULL;
$arguments21['reverse'] = false;
$arguments21['iteration'] = NULL;
$array23 = array (
);$arguments21['each'] = $renderingContext->getVariableProvider()->getByPath('extension.persons', $array23);
$arguments21['as'] = 'person';
$arguments21['iteration'] = 'counter';

$output0 .= TYPO3Fluid\Fluid\ViewHelpers\ForViewHelper::renderStatic($arguments21, $renderChildrenClosure22, $renderingContext);

$output0 .= '\',
    \'state\' => \'';
$array36 = array (
);
$output0 .= $renderingContext->getVariableProvider()->getByPath('extension.readableState', $array36);

$output0 .= '\',
    \'uploadfolder\' => ';
$array37 = array (
);
$output0 .= $renderingContext->getVariableProvider()->getByPath('extension.needsUploadFolder', $array37);

$output0 .= ',
    \'createDirs\' => \'\',
    \'clearCacheOnLoad\' => 0,
    \'version\' => \'';
$array38 = array (
);
$output0 .= $renderingContext->getVariableProvider()->getByPath('extension.version', $array38);

$output0 .= '\',
    \'constraints\' => [
        \'depends\' => [';
// Rendering ViewHelper TYPO3Fluid\Fluid\ViewHelpers\ForViewHelper
$renderChildrenClosure40 = function() use ($renderingContext, $self) {
$output42 = '';

$output42 .= '
            \'';
$array43 = array (
);
$output42 .= $renderingContext->getVariableProvider()->getByPath('extensionKey', $array43);

$output42 .= '\' => \'';
$array44 = array (
);
$output42 .= $renderingContext->getVariableProvider()->getByPath('version', $array44);

$output42 .= '\',';
return $output42;
};
$arguments39 = array();
$arguments39['each'] = NULL;
$arguments39['as'] = NULL;
$arguments39['key'] = NULL;
$arguments39['reverse'] = false;
$arguments39['iteration'] = NULL;
$array41 = array (
);$arguments39['each'] = $renderingContext->getVariableProvider()->getByPath('extension.dependencies', $array41);
$arguments39['as'] = 'version';
$arguments39['key'] = 'extensionKey';

$output0 .= TYPO3Fluid\Fluid\ViewHelpers\ForViewHelper::renderStatic($arguments39, $renderChildrenClosure40, $renderingContext);

$output0 .= '
        ],
        \'conflicts\' => [],
        \'suggests\' => [],
    ],
];
';

return $output0;
}


}
#